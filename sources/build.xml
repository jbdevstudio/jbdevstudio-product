<project default="build" name="jbdss aggregate sources build.xml">
  <!-- if ${WORKSPACE}/site folder exists, target that folder; else generate here. -->
  <condition property="output.dir" value="${WORKSPACE}/results" else="${basedir}">
    <available file="${WORKSPACE}/results" />
  </condition>

  <condition property="COMMON_TOOLS" value="/home/hudson/static_build_env/jbds/tools" else="${java.io.tmpdir}">
    <available file="/home/hudson/static_build_env/jbds" type="dir" />
  </condition>
  <mkdir dir="${COMMON_TOOLS}" />

  <property name="tmpdir" value="${java.io.tmpdir}/jbds-sources-build" />

  <!-- TODO: ensure this list of excludes is accurate
    Need to exclude stuff that's only in JBT but not in JBDS.
    For list of things to include/exclude, see:
      JBDS Core Features:   product/features/*/feature.xml
      JBDS Core Site:       product/site/category.xml
  -->
  <property name="jbosstools.excludes" value="**/*birt*/**, **/*community*/**, **/org.jboss.tools.gwt*/**"/>

  <target name="get.ant-contrib" unless="ant-contrib.jar.exists">
    <property name="ANTCONTRIB_MIRROR" value="http://sourceforge.net/projects/ant-contrib/files/ant-contrib/ant-contrib-1.0b2" />
    <get usetimestamp="true" dest="${COMMON_TOOLS}/ant-contrib-1.0b2-bin.zip" src="${ANTCONTRIB_MIRROR}/ant-contrib-1.0b2-bin.zip" />
    <touch file="${COMMON_TOOLS}/ant-contrib-1.0b2-bin.zip" />
    <mkdir dir="${java.io.tmpdir}/ant-contrib-1.0b2-bin.zip_" />
    <unzip src="${COMMON_TOOLS}/ant-contrib-1.0b2-bin.zip" dest="${java.io.tmpdir}/ant-contrib-1.0b2-bin.zip_" overwrite="true" />
    <copy file="${java.io.tmpdir}/ant-contrib-1.0b2-bin.zip_/ant-contrib/lib/ant-contrib.jar" tofile="${COMMON_TOOLS}/ant-contrib.jar" failonerror="true" />
    <delete dir="${java.io.tmpdir}/ant-contrib-1.0b2-bin.zip_" includeemptydirs="true" quiet="true" />
  </target>

  <target name="init">
    <echo level="verbose">
This script requires Ant 1.8+ and JDK 1.6+.
-------------------------------------------
$ant.version = ${ant.version}
$ant.home = ${ant.home}
$ant.java.version = ${ant.java.version}
$java.home = ${java.home}</echo>
    <available file="${COMMON_TOOLS}/ant-contrib.jar" type="file" property="ant-contrib.jar.exists" />
    <antcall target="get.ant-contrib" />
    <taskdef resource="net/sf/antcontrib/antlib.xml">
      <classpath>
        <pathelement location="${COMMON_TOOLS}/ant-contrib.jar" />
      </classpath>
    </taskdef>

    <mkdir dir="${tmpdir}" />
    <delete dir="target/" quiet="true" />
    <mkdir dir="target/" />
  </target>

  <target name="build" depends="init">
    <!-- get timestamp from upstream installer build (units.unit.id = Alpha2-v20130326-1416-B6969.jbds) instead of maven since tycho and pure maven don't use the same value -->
    <if>
      <available file="../installer/target/p2content.xml"/>
      <then>
        <xmlproperty file="../installer/target/p2content.xml" collapseAttributes="true"/>
        <propertyregex property="update.site.qualifier" defaultvalue="${units.unit.id}" input="${units.unit.id}" regexp=".jbds" replace="" override="true" />
      </then>
      <else>
        <if>
          <isset property="BUILD_NUMBER"/>
          <then>
            <var name="update.site.qualifier" value="${update.site.qualifier}-B${BUILD_NUMBER}"/>
          </then>
        </if>
      </else>
    </if>

    <propertyregex property="update.site.version" defaultvalue="${project.version}" input="${project.version}" regexp="-SNAPSHOT" replace="" override="true" />
    
    <property name="sourcesZip" value="target/jbdevstudio-product-sources-${update.site.version}.${update.site.qualifier}.zip" />

    <antcall target="get.local.sources" />
    <antcallback target="get.zips" return="ALL_ZIPS" />
    <antcall target="cleanup" />
  </target>

  <target name="get.list">
    <get usetimestamp="true" ignoreerrors="true" src="${inputBuild}/latest/logs/zip.list.txt" dest="${tmpdir}/zip.list.txt" />
    <property file="${tmpdir}/zip.list.txt" />
    <echo level="verbose">Loaded list of zips to aggregate from ${java.io.tmpdir}/zip.list.txt</echo>
    <delete file="${tmpdir}/zip.list.txt" quiet="true" />
  </target>

  <target name="get.local.sources">
    <zip destfile="${sourcesZip}" duplicate="preserve">
      <zipfileset dir="${basedir}/../" prefix="devstudio/product/" excludes="**/installer/src/**, **/installer/tools/lib/**, **/workspace/**, **/target*/**, **/build/**, **/*.class, **/*.zip, **/.jar, **/jbds-echoproperties.txt" />
      <!-- JBDS-2456 in order to make JBDS buildable, need to include p2-director.zip -->
      <zipfileset dir="${basedir}/../installer" prefix="devstudio/product/installer" includes="p2-director.zip" />
      <zipfileset dir="${basedir}/../installer/src" prefix="devstudio/product/installer/src" includes="**" />
      <zipfileset dir="${basedir}/../installer/tools/lib" prefix="devstudio/product/installer/tools/lib" includes="**" />
    </zip>
  </target>

  <target name="get.zips">

    <!-- given http://download.jboss.org/jbosstools/updates/nightly/core/4.1.kepler/, want http://download.jboss.org/jbosstools/builds/nightly/core/4.1.kepler/ -->
    <propertyregex property="inputBuild" input="${inputRepo}" regexp="updates/nightly" replace="builds/nightly" />
    <if>
      <isset property="inputBuild"/>
      <then>
        <antcallback target="get.list" return="ALL_ZIPS" />
        <for list="${ALL_ZIPS}" param="zip" delimiter=", 
    ">
          <sequential>
            <if>
              <contains string="@{zip}" substring=".aggregate-Sources-" />
              <then>
                <propertyregex input="@{zip}" defaultvalue="@{zip}" property="zip" regexp=".+/(.+.zip)" replace="\1" casesensitive="false" />
                <echo level="error">get ${inputBuild}/latest/@{zip} to ${tmpdir}/${zip}</echo>
                <get usetimestamp="true" ignoreerrors="true" src="${inputBuild}/latest/@{zip}" dest="${tmpdir}/${zip}" />
                <zip destfile="${sourcesZip}" update="true">
                  <zipfileset src="${tmpdir}/${zip}" prefix="jbosstools/" excludes="${jbosstools.excludes}"/>
                </zip>
                <var name="zip" unset="true" />
              </then>
            </if>
            <if>
              <contains string="@{zip}" substring=".aggregate-Additional-Sources-" />
              <then>
                <propertyregex input="@{zip}" defaultvalue="@{zip}" property="zip" regexp=".+/(.+.zip)" replace="\1" casesensitive="false" />
                <echo level="error">get ${inputBuild}/latest/@{zip} to ${tmpdir}/${zip}</echo>
                <get usetimestamp="true" ignoreerrors="true" src="${inputBuild}/latest/@{zip}" dest="${tmpdir}/${zip}" />
                <zip destfile="${sourcesZip}" update="true">
                  <zipfileset src="${tmpdir}/${zip}" prefix="build/" />
                </zip>
                <var name="zip" unset="true" />
              </then>
            </if>
          </sequential>
        </for>
      </then>
      <else>
        <echo>No nightly build folder could be found from which to fetch sources for inputRepo (jbosstools-site) = ${inputRepo}</echo>
      </else>
    </if>
  </target>

  <target name="cleanup">
    <delete includeemptydirs="true" quiet="true">
      <fileset dir="${tmpdir}" />
    </delete>
  </target>

</project>
